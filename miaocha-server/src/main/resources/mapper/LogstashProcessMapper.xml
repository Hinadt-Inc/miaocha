<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hinadt.miaocha.domain.mapper.LogstashProcessMapper">

    <!-- Logstash进程表所有字段 -->
    <sql id="logstashProcessColumns">
        id
        , name, module_id, config_content, jvm_options, logstash_yml, create_time, update_time, create_user, update_user
    </sql>

    <!-- Logstash进程表所有字段（带lp别名） -->
    <sql id="logstashProcessColumnsWithAlias">
        lp
        .
        id
        , lp.name, lp.module_id, lp.config_content, lp.jvm_options, lp.logstash_yml, lp.create_time, lp.update_time, lp.create_user, lp.update_user
    </sql>

    <!-- 插入 Logstash 进程记录 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO logstash_process (name, module_id, config_content, jvm_options, logstash_yml, create_user,
                                      update_user)
        VALUES (#{name}, #{moduleId}, #{configContent}, #{jvmOptions}, #{logstashYml}, #{createUser}, #{updateUser})
    </insert>

    <!-- 更新进程记录 -->
    <update id="update">
        UPDATE logstash_process
        SET name=#{name},
            module_id=#{moduleId},
            config_content=#{configContent},
            jvm_options=#{jvmOptions},
            logstash_yml=#{logstashYml},
            update_user=#{updateUser}
        WHERE id = #{id}
    </update>


    <!-- 仅更新配置信息 -->
    <update id="updateConfigOnly">
        UPDATE logstash_process
        <set>
            <if test="configContent != null">
                config_content=#{configContent},
            </if>
            <if test="jvmOptions != null">
                jvm_options=#{jvmOptions},
            </if>
            <if test="logstashYml != null">
                logstash_yml=#{logstashYml},
            </if>
            update_user=#{updateUser}
        </set>
        WHERE id=#{id}
    </update>

    <!-- 更新进程的完整元信息（包括基础信息和配置信息） -->
    <update id="updateMetadataAndConfig">
        UPDATE logstash_process
        <set>
            name=#{name},
            module_id=#{moduleId},
            <if test="configContent != null">
                config_content=#{configContent},
            </if>
            <if test="jvmOptions != null">
                jvm_options=#{jvmOptions},
            </if>
            <if test="logstashYml != null">
                logstash_yml=#{logstashYml},
            </if>
            update_user=#{updateUser}
        </set>
        WHERE id=#{id}
    </update>

    <!-- 根据ID删除 -->
    <delete id="deleteById">
        DELETE
        FROM logstash_process
        WHERE id = #{id}
    </delete>

    <!-- 删除所有进程 -->
    <delete id="deleteAll">
        DELETE
        FROM logstash_process
    </delete>

    <!-- 根据ID查询 -->
    <select id="selectById" resultType="com.hinadt.miaocha.domain.entity.LogstashProcess">
        SELECT
        <include refid="logstashProcessColumns"/>
        FROM logstash_process WHERE id=#{id}
    </select>

    <!-- 根据名称查询 -->
    <select id="selectByName" resultType="com.hinadt.miaocha.domain.entity.LogstashProcess">
        SELECT
        <include refid="logstashProcessColumns"/>
        FROM logstash_process WHERE name=#{name}
    </select>

    <!-- 根据模块ID统计 -->
    <select id="countByModuleId" resultType="int">
        SELECT COUNT(id)
        FROM logstash_process
        WHERE module_id = #{moduleId}
    </select>

    <!-- 查询所有 -->
    <select id="selectAll" resultType="com.hinadt.miaocha.domain.entity.LogstashProcess">
        SELECT
        <include refid="logstashProcessColumnsWithAlias"/>
        FROM logstash_process lp
        LEFT JOIN module_info mi ON lp.module_id = mi.id
        ORDER BY mi.name ASC, lp.name ASC
    </select>


</mapper>
