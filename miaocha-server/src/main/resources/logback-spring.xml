<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 定义日志文件的存储地址 -->
    <springProperty scope="context" name="LOG_HOME" source="log-config.log-home" defaultValue="${LOG_PATH:-./logs}"/>
    <springProperty scope="context" name="MAX-HISTORY" source="log-config.max-history" defaultValue="30"/>
    <springProperty scope="context" name="TOTAL-SIZE-CAP" source="log-config.total-size-cap" defaultValue="1GB"/>
    <springProperty scope="context" name="CLEAN-HISTORY-ON-START" source="log-config.clean-history-on-start"
                    defaultValue="true"/>
    <springProperty scope="context" name="MAX-FILE-SIZE" source="log-config.max-file-size" defaultValue="100MB"/>
    <springProperty scope="context" name="QUEUE-SIZE" source="log-config.queue-size" defaultValue="1024"/>
    <springProperty scope="context" name="DISCARDING-THRESHOLD" source="log-config.discarding-threshold"
                    defaultValue="0"/>

    <property name="FILE_NAME" value="log-manage-system"/>

    <!-- 日志输出格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN_COLOR"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr([%thread]){magenta} %clr(%-5level){green} %clr(%logger{36}){cyan} - %msg%n"/>

    <!-- 控制台输出 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN_COLOR}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 普通格式文件输出 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${FILE_NAME}.log</file>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${LOG_HOME}/archive/${FILE_NAME}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>${MAX-HISTORY}</maxHistory>
            <!-- 日志文件最大大小 -->
            <maxFileSize>${MAX-FILE-SIZE}</maxFileSize>
            <!-- 日志文件总大小限制 -->
            <totalSizeCap>${TOTAL-SIZE-CAP}</totalSizeCap>
            <cleanHistoryOnStart>${CLEAN-HISTORY-ON-START}</cleanHistoryOnStart>
        </rollingPolicy>
    </appender>

    <!-- JSON格式INFO日志文件输出 -->
    <appender name="JSON_INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/${FILE_NAME}-json.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <pattern>
                    <omitEmptyFields>true</omitEmptyFields>
                    <pattern>
                        {
                        "service": "log-manage-system",
                        "time": "%d{yyyy-MM-dd HH:mm:ss.SSS}",
                        "level": "%p",
                        "logger": "%logger{39}",
                        "line": "%L",
                        "thread": "%t",
                        "method": "%M",
                        "msg": "%msg",
                        "stacktrace": "%ex{2}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/archive/${FILE_NAME}-json.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${MAX-HISTORY}</maxHistory>
            <totalSizeCap>${TOTAL-SIZE-CAP}</totalSizeCap>
            <cleanHistoryOnStart>${CLEAN-HISTORY-ON-START}</cleanHistoryOnStart>
            <maxFileSize>${MAX-FILE-SIZE}</maxFileSize>
        </rollingPolicy>
    </appender>

    <!-- JSON格式ERROR日志文件输出 -->
    <appender name="JSON_ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/${FILE_NAME}-json-error.log</File>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <pattern>
                    <omitEmptyFields>true</omitEmptyFields>
                    <pattern>
                        {
                        "service": "log-manage-system",
                        "time": "%d{yyyy-MM-dd HH:mm:ss.SSS}",
                        "level": "%p",
                        "logger": "%logger{39}",
                        "line": "%L",
                        "thread": "%t",
                        "method": "%M",
                        "msg": "%msg",
                        "stacktrace": "%ex"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/archive/${FILE_NAME}-json-error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${MAX-HISTORY}</maxHistory>
            <totalSizeCap>${TOTAL-SIZE-CAP}</totalSizeCap>
            <cleanHistoryOnStart>${CLEAN-HISTORY-ON-START}</cleanHistoryOnStart>
            <maxFileSize>${MAX-FILE-SIZE}</maxFileSize>
        </rollingPolicy>
    </appender>

    <!-- 异步输出 - 普通格式 -->
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>${QUEUE-SIZE}</queueSize>
        <discardingThreshold>${DISCARDING-THRESHOLD}</discardingThreshold>
        <appender-ref ref="FILE"/>
    </appender>

    <!-- 异步输出 - JSON格式INFO -->
    <appender name="ASYNC_JSON_INFO" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>${QUEUE-SIZE}</queueSize>
        <discardingThreshold>${DISCARDING-THRESHOLD}</discardingThreshold>
        <appender-ref ref="JSON_INFO_FILE"/>
    </appender>

    <!-- 异步输出 - JSON格式ERROR -->
    <appender name="ASYNC_JSON_ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>${QUEUE-SIZE}</queueSize>
        <discardingThreshold>${DISCARDING-THRESHOLD}</discardingThreshold>
        <appender-ref ref="JSON_ERROR_FILE"/>
    </appender>

    <!-- 开发环境配置：控制台 + 普通格式文件 + JSON格式文件 -->
    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ASYNC_JSON_INFO"/>
            <appender-ref ref="ASYNC_JSON_ERROR"/>
        </root>
        <!-- 应用特定日志级别 -->
        <logger name="com.hinadt.miaocha" level="DEBUG"/>
    </springProfile>

    <!-- 测试环境配置：控制台 + 普通格式文件 + JSON格式文件 -->
    <springProfile name="test">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ASYNC_JSON_INFO"/>
            <appender-ref ref="ASYNC_JSON_ERROR"/>
        </root>
    </springProfile>

    <!-- 集成测试环境配置：只有控制台输出 -->
    <springProfile name="integration-test">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
        <!-- 应用特定日志级别 -->
        <logger name="com.hinadt.miaocha" level="DEBUG"/>
        <!-- 集成测试相关日志 -->
        <logger name="org.testcontainers" level="INFO"/>
        <logger name="org.springframework.test" level="INFO"/>
    </springProfile>

    <!-- 生产环境配置：只有JSON格式文件 -->
    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="ASYNC_JSON_INFO"/>
            <appender-ref ref="ASYNC_JSON_ERROR"/>
        </root>
        <!-- 应用特定日志级别 -->
        <logger name="com.hinadt.miaocha" level="INFO"/>
        <!-- 减少一些框架的日志输出 -->
        <logger name="org.springframework" level="WARN"/>
        <logger name="org.hibernate" level="WARN"/>
        <logger name="org.apache" level="WARN"/>
    </springProfile>

</configuration>
